services:
  frontend:
    build:
      context: .
    ports:
      - 9876:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # networks:
    #   - public
    # depends_on:
    #   - backend
  # backend:
  #   build:
  #     args:
  #       - NODE_ENV=development
  #     context: backend
  #     target: dev-envs
  #   command: pnpm run start-watch
  #   environment:
  #     - DATABASE_DB=typey
  #     - DATABASE_USER=root
  #     - DATABASE_PASSWORD=/run/secrets/db-password
  #     - DATABASE_HOST=db
  #     - NODE_ENV=development
  #   # ports:
  #   #   - 8765:8765
  #   secrets:
  #     - db-password
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #     - private
  #   depends_on:
  #     - db
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=typey
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt
